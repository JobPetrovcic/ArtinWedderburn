import Mathlib.RingTheory.Artinian
import Mathlib.Algebra.Field.Defs
import Mathlib.RingTheory.SimpleRing.Basic
import Mathlib.Algebra.Ring.Idempotents
import ArtinWedderburn.PrimeRing
import ArtinWedderburn.CornerRing


variable {R : Type*} [Ring R]

variable (I J : Ideal R) -- Ideals in mathlib are LEFT ideals (defined as Submodule R R)

variable (A B C: Set R)
-- the set of all pairwise products of elements of A and B
abbrev pair_wise_set_prod : Set R := fun x => ∃ (a b : R), a ∈ A ∧ b ∈ B ∧ x = a * b

-- the ideal generated by the set of all pairwise products of elements of A and B
abbrev ring_subset_prod : Ideal R := Ideal.span (pair_wise_set_prod A B)

-- there is a multiplicative structure on the set of ideals of a ring
instance : Mul (Ideal R) := {mul := fun I J => ring_subset_prod ↑I ↑J}

open Pointwise Set
instance : Mul (TwoSidedIdeal R) := {mul := fun I J => TwoSidedIdeal.span (↑I * ↑J)}
-- TODO: Is this already in mathlib? There doesn't seem to be a Mul instance for TwoSidedIdeal in the file that defines TwoSidedIdeal



@[simp]
theorem prod_eq_span_pairwise_prod : I * J = Ideal.span (pair_wise_set_prod I J) := rfl






-- lemma 2.14
theorem artinian_ring_has_minimal_left_ideal [IsArtinian R R] : ∃ I : Ideal R, IsAtom I := by sorry -- Mikita

-- TODO: maybe split this up into multiple definitions
class hasMatrixUnits (R : Type*) [Ring R] (n : ℕ) where -- Done by Job
  es : Fin n → Fin n → R
  diag_sum_eq_one : ∑ i, es i i = 1
  mul_ij_kl_eq_kron_delta_jk_mul_es_il : ∀ i j k l, es i j * es k l = (if j = k then es i l else 0)


variable (idem_e : IsIdempotentElem e)

-- Lemma 2.17
-- hypothesis: R is a ring with matrix units
-- conclusion: R is isomorphic to matrix ring over ring e_11Re_11
def ring_with_matrix_units_isomorphic_to_matrix_ring (n : ℕ) (mu : hasMatrixUnits R n) :
  R ≃+* Matrix (Fin n) (Fin n) (CornerRing idem_e) := by sorry -- Leave for now, split into multiple lemmas

-- Lemma 2.18
-- hypothesis: we have a parwise orthogonal idempotent e_ii for each i in {1, ..., n}
-- and e1i ∈ e11Reii for all i in {2, ..., n}
-- and e1iei1 = e11 and ei1e1i = eii for all i in {2, ..., n}
-- conclusion: has matrix units R
def PairwiseOrthogonal (a b : R) : Prop := a * b = 0 ∧ b * a = 0

def lemma_2_18 {n : ℕ} (hn : 0 < n)
  (diag_es : Fin n → R) -- candidate matrix units
  (h_idem : (∀ i : Fin n, IsIdempotentElem (diag_es i))) -- idempotent
  (h_ortho : (∀ i j : Fin n, i ≠ j → PairwiseOrthogonal (diag_es i) (diag_es j))) -- pairwise orthogonal
  -- first row
  (row0_es : Fin n -> R)
  (_ : row0_es ⟨0, hn⟩ = diag_es ⟨0, hn⟩)
  (_ : ∀ i : Fin n, row0_es i ∈ (diag_es ⟨0, hn⟩ ⬝ R ⬝ diag_es i))
  -- first column
  (col0_es : Fin n -> R)
  (_ : col0_es ⟨0, hn⟩ = diag_es ⟨0, hn⟩)
  (_ : ∀ i : Fin n, col0_es i ∈ (diag_es i ⬝ R ⬝ diag_es ⟨0, hn⟩))
  -- they are compatible
  (_ : ∀ i, row0_es i * col0_es i = diag_es ⟨0, hn⟩)
  (_ : ∀ i, col0_es i * row0_es i = diag_es i)
  : hasMatrixUnits R n := by sorry -- Leave for now, split into multiple lemmas

-- Lemma 2.19 (a)
-- apparently we don't need b) and c)
theorem lemma_2_19
  (h : IsPrimeRing R)
  (e f : R) (idem_e : IsIdempotentElem e) (idem_f : IsIdempotentElem f) (h_o : IsOrthogonal e f)
  (heRe : DivisionRing (CornerRing idem_e)) (hfRf : DivisionRing (CornerRing idem_f)) :
  ∃ (u v : R) (hu : u ∈ (e ⬝ R ⬝ f)) (hv : v ∈ (f ⬝ R ⬝ e)), u * v = e ∧ v * u = f := by sorry -- Leave for now, split into multiple lemmas

-- Finally, the Artin-Wedderburn theorem
universe u

def ArtinWedderburnForPrime {R : Type u} [Ring R] (h : IsPrimeRing R) [IsArtinian R R] :
  ∃ (n : ℕ) (D : Type u) ( _ :DivisionRing D), Nonempty (R ≃+* Matrix (Fin n) (Fin n) D) := by sorry -- Leave for now, split into multiple lemmas

def ArtinWedderburnForSimple {R : Type u} [Ring R] [IsSimpleRing R] :
  ∃ (n : ℕ) (D : Type u) ( _ :DivisionRing D), Nonempty (R ≃+* Matrix (Fin n) (Fin n) D) := by sorry -- Just an application

-- Can we use previous to prove this
theorem isSemisimpleRing_iff_pi_matrix_divisionRing {R : Type u} [Ring R] :
    IsSemisimpleRing R ↔
    ∃ (n : ℕ) (S : Fin n → Type u) (d : Fin n → ℕ) (_ : ∀ i, DivisionRing (S i)),
      Nonempty (R ≃+* ∀ i, Matrix (Fin (d i)) (Fin (d i)) (S i)) := by sorry
